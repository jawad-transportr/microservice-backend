version: '3.8' # Specifies the Docker Compose file version which determines the available features

services:
  # Kafka Service
  kafka:
    image: 'bitnami/kafka:latest' # Uses the latest Kafka image from Bitnami, a provider of packaged applications for Docker
    ports:
      - '9092:9092' # Maps TCP port 9092 on the host to TCP port 9092 on the Kafka container (used internally by Kafka brokers)
      - '9094:9094' # Maps TCP port 9094 on the host to TCP port 9094 on the Kafka container (used for external clients)
    environment:
      - KAFKA_CFG_NODE_ID=0 # Sets the node ID for the Kafka broker
      - KAFKA_CFG_PROCESS_ROLES=controller,broker # Assigns roles to the Kafka process as both controller and broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093 # Configures the controller quorum voters for the Kafka broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094 # Configures the listeners for different protocols
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094 # Sets how the Kafka broker advertises itself to external clients
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT # Maps listener names to security protocols
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER # Specifies the listener names that are used for the controller
      - KAFKA_CFG_MESSAGE_MAX_BYTES=20000000 # Sets the maximum size in bytes of a message that the server can receive
    networks:
      - app-tier # Connects the Kafka service to the 'app-tier' network

  # MYSQL
  # mysql:
  #   image: mysql:latest
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #   ports:
  #     - 3306:3306
  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: 'mysql'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - mysqldb:/var/lib/mysql
volumes:
  mysqldb:

networks:
  app-tier:
    driver: bridge # Configures the 'app-tier' network with the bridge driver, providing isolation between containers

